on: [push, pull_request]

env:
  PYTEST_ADDOPTS: "--color=yes"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: "3.6"
            tox-env: py36
          - python-version: "3.7"
            tox-env: py37
          - python-version: "3.8"
            tox-env: py38
          - python-version: "3.9"
            tox-env: py39
          - tox-env: chrome
          - tox-env: chrome
            headless: true
          - tox-env: marionette
          - tox-env: marionette
            headless: true
          - tox-env: docs

    steps:
      - uses: actions/checkout@v2

      - run: mkdir -p ~/drivers; export PATH=~/drivers:$PATH

      - name: Install Firefox
        uses: browser-actions/setup-firefox@latest
        if: matrix.tox-env != 'chrome'

      - name: Install Geckodriver
        run: |
          GECKODRIVER_VERSION=$(curl -s https://api.github.com/repos/mozilla/geckodriver/releases/latest | python -c "import sys, json; print(json.load(sys.stdin)['tag_name'])")
          GECKODRIVER_URL="https://github.com/mozilla/geckodriver/releases/download/$GECKODRIVER_VERSION/geckodriver-$GECKODRIVER_VERSION-linux64.tar.gz"
          FILE=`mktemp`
          wget "$GECKODRIVER_URL" -qO $FILE && tar xz -C ~/drivers -f $FILE geckodriver
          rm $FILE
          chmod 777 ~/drivers/geckodriver
          ~/drivers/geckodriver --version

      - name: Install Chromedriver
        run: |
          CHROMEDRIVER_VERSION=$(wget -q -O - http://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          CHROMEDRIVER_URL="http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
          FILE=`mktemp`
          wget "$CHROMEDRIVER_URL" -qO $FILE && unzip $FILE chromedriver -d ~/drivers
          rm $FILE
          chmod 777 ~/drivers/chromedriver
          ~/drivers/chromedriver --version

      - name: Install Xvfb
        run: |
          sudo apt-get install xvfb
          export DISPLAY=:99.0
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Install Awesome
        run: |
          sudo apt-get install awesome
          mkdir -p ~/.config/awesome
          echo "require('awful'); tags = {}; tags[1] = awful.tag({'name'})" > ~/.config/awesome/rc.lua
          awesome &
        if: matrix.headless

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version || '3.9' }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Test
        env:
          PYTEST_ADDOPTS: "${{ env.PYTEST_ADDOPTS }} --junitxml=pytest/test-results-${{ matrix.python-version }}.xml"
        run: tox -e ${{ matrix.tox-env || 'py' }}

      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: pytest/test-results-${{ matrix.python-version }}.xml
        if: ${{ always() }}
